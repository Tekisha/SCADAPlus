//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ServiceReference1
{
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RTUMessage", Namespace="http://schemas.datacontract.org/2004/07/RealTimeDriver")]
    public partial class RTUMessage : object
    {
        
        private string AddressField;
        
        private string MessageField;
        
        private byte[] SignatureField;
        
        private double ValueField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address
        {
            get
            {
                return this.AddressField;
            }
            set
            {
                this.AddressField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message
        {
            get
            {
                return this.MessageField;
            }
            set
            {
                this.MessageField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] Signature
        {
            get
            {
                return this.SignatureField;
            }
            set
            {
                this.SignatureField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Value
        {
            get
            {
                return this.ValueField;
            }
            set
            {
                this.ValueField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IRealTimeUnitService", CallbackContract=typeof(ServiceReference1.IRealTimeUnitServiceCallback))]
    public interface IRealTimeUnitService
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRealTimeUnitService/Subscribe", ReplyAction="http://tempuri.org/IRealTimeUnitService/SubscribeResponse")]
        void Subscribe();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRealTimeUnitService/Subscribe", ReplyAction="http://tempuri.org/IRealTimeUnitService/SubscribeResponse")]
        System.Threading.Tasks.Task SubscribeAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    public interface IRealTimeUnitServiceCallback
    {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IRealTimeUnitService/OnMessagePublished")]
        void OnMessagePublished(ServiceReference1.RTUMessage message);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    public interface IRealTimeUnitServiceChannel : ServiceReference1.IRealTimeUnitService, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    public partial class RealTimeUnitServiceClientBase : System.ServiceModel.DuplexClientBase<ServiceReference1.IRealTimeUnitService>, ServiceReference1.IRealTimeUnitService
    {
        
        public RealTimeUnitServiceClientBase(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress)
        {
        }
        
        public void Subscribe()
        {
            base.Channel.Subscribe();
        }
        
        public System.Threading.Tasks.Task SubscribeAsync()
        {
            return base.Channel.SubscribeAsync();
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
    }
    
    public class OnMessagePublishedReceivedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {
        
        private object[] results;
        
        public OnMessagePublishedReceivedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState)
        {
            this.results = results;
        }
        
        public ServiceReference1.RTUMessage message
        {
            get
            {
                base.RaiseExceptionIfNecessary();
                return ((ServiceReference1.RTUMessage)(this.results[0]));
            }
        }
    }
    
    public partial class RealTimeUnitServiceClient : RealTimeUnitServiceClientBase
    {
        
        public RealTimeUnitServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                this(new RealTimeUnitServiceClientCallback(), binding, remoteAddress)
        {
        }
        
        private RealTimeUnitServiceClient(RealTimeUnitServiceClientCallback callbackImpl, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(new System.ServiceModel.InstanceContext(callbackImpl), binding, remoteAddress)
        {
            callbackImpl.Initialize(this);
        }
        
        public event System.EventHandler<OnMessagePublishedReceivedEventArgs> OnMessagePublishedReceived;
        
        private void OnOnMessagePublishedReceived(object state)
        {
            if ((this.OnMessagePublishedReceived != null))
            {
                object[] results = ((object[])(state));
                this.OnMessagePublishedReceived(this, new OnMessagePublishedReceivedEventArgs(results, null, false, null));
            }
        }
        
        private class RealTimeUnitServiceClientCallback : object, IRealTimeUnitServiceCallback
        {
            
            private RealTimeUnitServiceClient proxy;
            
            public void Initialize(RealTimeUnitServiceClient proxy)
            {
                this.proxy = proxy;
            }
            
            public void OnMessagePublished(ServiceReference1.RTUMessage message)
            {
                this.proxy.OnOnMessagePublishedReceived(new object[] {
                            message});
            }
        }
    }
}
